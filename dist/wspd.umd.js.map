{"version":3,"file":"wspd.umd.js","sources":["../src/split-tree.js","../src/index.js"],"sourcesContent":["const { min, max } = Math;\n\n/**\n * @typedef {Array<Number>} HyperRect\n */\n\nfunction bbox (points, dim) {\n  const b = new Array(dim * 2);\n  let i, j, p, len = points.length;\n  for (i = 0; i < dim; i++) {\n    b[i]       =  Infinity;\n    b[dim + i] = -Infinity;\n  }\n\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    for (j = 0; j < dim; j++) {\n      b[j]       = min(b[j], p[j]);\n      b[dim + j] = max(b[dim + j], p[j]);\n    }\n  }\n  return b;\n}\n\n\nfunction getMaxDimension (box, dim) {\n  let maxDist = 0, maxDim = 0;\n  for (let i = 0; i < dim; i++) {\n    let dist = box[dim + i] - box[i];\n    if (dist > maxDist) {\n      maxDist = dist;\n      maxDim = i;\n    }\n  }\n  return { dimension: maxDim, threshold: box[maxDim] + maxDist / 2 };\n}\n\n\nexport default class SplitTree {\n\n\n  constructor (points = [], dimensions = 2) {\n    this._dim  = dimensions;\n    this._root = this.build(null, points, this._dim);\n  }\n\n\n  build (parent, points, dim) {\n    if (points.length === 1) return { parent, points, isLeaf: true };\n\n    // bounding hyper rectangle\n    const hyperrect = bbox(points, dim);\n    const node      = { bbox: hyperrect, parent, isLeaf: false };\n\n    // hyperplane\n    const { dimension, threshold } = getMaxDimension(hyperrect, dim);\n    console.log(points, hyperrect, dimension, threshold);\n\n    const left = [], right = [];\n\n    for (let i = 0, len = points.length; i < len; i++) {\n      let p = points[i];\n      (p[dimension] < threshold ? left : right).push(p);\n    }\n\n    node.left  = this.build(node, left,  dim);\n    node.right = this.build(node, right, dim);\n\n    return node;\n  }\n\n\n  get root () {\n    return this._root;\n  }\n}\n\nSplitTree.bbox = bbox;\n","import SplitTree from './split-tree';\n\nconst wspd = function () {\n\n};\n\nwspd.SplitTree = SplitTree;\n\nexport default wspd;\n"],"names":["const","let"],"mappings":"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"}